<UserControl x:Class="SharedLivingCostCalculator.Views.FlatManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SharedLivingCostCalculator.Views"
             xmlns:comps="clr-namespace:SharedLivingCostCalculator.Components"
             xmlns:utils="clr-namespace:SharedLivingCostCalculator.Utility"
             x:Name="FMV"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
               Background="{DynamicResource SCB_Background}"
             >
    <UserControl.Resources>

        <utils:InverseVisibilityConverter x:Key="InverseVisibilityConverter"/>
        <utils:VisibilityConverter x:Key="VisibilityConverter"/>

    </UserControl.Resources>

    <Grid Margin="20" HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="{DynamicResource FlatManagementHeaderText}"
                   Grid.Row="0"
                   Style="{StaticResource Header}"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.55*"/>
                <ColumnDefinition Width="0.15*"/>
                <ColumnDefinition Width="0.15*"/>
                <ColumnDefinition Width="0.15*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Button Content="New Flat"
                Command="{Binding NewFlatCommand}"
                    CommandParameter="{x:Reference Name=FMV}"
                    Grid.Column="0" Grid.Row="0"/>

            <Button Content="Edit"                
                    Command="{Binding EditFlatCommand}"
                    CommandParameter="{Binding ElementName=DG_FlatCollection, Path=SelectedItem}"
                    IsEnabled="{Binding FlatCollectionFilled, NotifyOnSourceUpdated=True}"
                     Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}"
                    HorizontalContentAlignment="Center"
                    Grid.Column="1" Grid.Row="0"/>

            <Button Content="Delete"
                    Command="{Binding DeleteFlatCommand}"
                    CommandParameter="{Binding ElementName=DG_FlatCollection, Path=SelectedItem}"
                    IsEnabled="{Binding FlatCollectionFilled, NotifyOnSourceUpdated=True}"
                     Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}"
                    HorizontalContentAlignment="Center"
                    Grid.Column="2" Grid.Row="0"/>

            <Button Content="Settings"
                    Command="{Binding SettingsCommand}"
                    CommandParameter="{x:Reference Name=FMV}"
                    Grid.Column="3" Grid.Row="0"/>



            <TextBlock Text="{DynamicResource FlatManagementInstructionText}"
                     Visibility="{Binding HasFlat, Converter={StaticResource InverseVisibilityConverter}}"
                   Margin="20" TextAlignment="Left"
                   Grid.Column="0"
                   Grid.Row="1"/>

            <DataGrid ItemsSource="{Binding FlatCollection}"
                  SelectionMode="Single"
                  SelectedItem="{Binding SelectedItem}"
                  Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}"
                  x:Name="DG_FlatCollection"      
                  AutoGenerateColumns="False"
                  TextBlock.TextAlignment="Right"   
                  IsReadOnly="True"
                          Grid.Column="0"
                          Grid.ColumnSpan="3" Grid.Row="1">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource IDF_Address}" Binding="{Binding Address}"
                                    CanUserSort="True"/>
                    <DataGridTextColumn Header="{DynamicResource IDF_Details}" Binding="{Binding Details}"
                                    CanUserSort="True"/>
                    <DataGridTextColumn Header="{DynamicResource IDF_FlatArea}" Binding="{Binding Area}"
                                    CanUserSort="True" MinWidth="75"/>
                    <DataGridTextColumn Header="{DynamicResource IDF_Rooms}" Binding="{Binding RoomCount}"
                                    CanUserSort="True"/>
                </DataGrid.Columns>

            </DataGrid>

            <Button Content="{DynamicResource IDF_Accounting}" 
                Command="{Binding AccountingCommand}"
                CommandParameter="{Binding ElementName=DG_FlatCollection, Path=SelectedItem}"
                     Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}"
               Grid.Column="3"  Grid.Row="1"
                />
        </Grid>

        <StackPanel Grid.Row="2"
                     Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="left"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="middle"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <comps:DoubleInputView Label="{DynamicResource IDF_FlatArea}"
                                       Value="{Binding SelectedItem.Area, StringFormat=N2}"
                                       IsReadOnly="True"
                                       ValueAlignment="Right"
                                       LabelMinWidth="90"
                                       ValueMinWidth="90"
                                       Grid.Column="0" Grid.Row="0"/>
                <comps:DoubleInputView Label="{DynamicResource IDF_SharedFlatArea}"
                                           Value="{Binding SelectedItem.SharedArea, StringFormat=N2}"
                                           IsReadOnly="True"
                                               ValueAlignment="Right"
                                       LabelMinWidth="120"
                                       ValueMinWidth="90"
                                       Grid.Column="1" Grid.Row="0"/>

                <comps:CurrencyInputView Label="{DynamicResource IDF_Rent}"
                                           Value="{Binding SelectedItem.Rent,NotifyOnSourceUpdated=True}"
                                           IsReadOnly="True"
                                               ValueAlignment="Right"
                                       LabelMinWidth="90"
                                       ValueMinWidth="90"
                                       Grid.Column="0" Grid.Row="1"/>
                <comps:CurrencyInputView Label="{DynamicResource IDF_SharedRent}"
                                           Value="{Binding SelectedItem.SharedRent,NotifyOnSourceUpdated=True}"
                                           IsReadOnly="True"
                                               ValueAlignment="Right"
                                       LabelMinWidth="120"
                                       ValueMinWidth="90"
                                       Grid.Column="1" Grid.Row="1"/>

                <comps:CurrencyInputView Label="{DynamicResource IDF_Advance}"
                                           Value="{Binding SelectedItem.ExtraCosts, NotifyOnSourceUpdated=True}"
                                           IsReadOnly="True"
                                               ValueAlignment="Right"
                                       LabelMinWidth="90"
                                       ValueMinWidth="90"
                                       Grid.Column="0" Grid.Row="2"/>
                <comps:CurrencyInputView Label="{DynamicResource IDF_SharedAdvance}"
                                           Value="{Binding SelectedItem.SharedExtraCosts, NotifyOnSourceUpdated=True}"
                                           IsReadOnly="True"
                                               ValueAlignment="Right"
                                       LabelMinWidth="120"
                                       ValueMinWidth="90"
                                       Grid.Column="1" Grid.Row="2" Grid.IsSharedSizeScope="True"/>

                <TextBox Text="{Binding SelectedItem.FlatNotes, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                     Grid.Column="2" VerticalAlignment="Stretch"
                         Grid.Row="0"
                         Grid.RowSpan="3"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Left"/>
            </Grid>


            <DataGrid ItemsSource="{Binding SelectedItem.CurrentRoomCosts, NotifyOnSourceUpdated=True}"
                      Visibility="{Binding HasFlat, Converter={StaticResource VisibilityConverter}}"
                  SelectionMode="Single"  
                  AutoGenerateColumns="False"                  
                  HorizontalAlignment="Stretch"      
                  TextBlock.TextAlignment="Right"
                  IsReadOnly="True"
                  Grid.Row="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource IDF_RoomName}" CanUserSort="True"
                                        IsReadOnly="True" MinWidth="150"
                                        Binding="{Binding Room.RoomName}"/>

                    <DataGridTextColumn Header="{DynamicResource IDF_RoomName}" CanUserSort="True"
                                        IsReadOnly="True"
                                        Binding="{Binding Room.RoomArea, StringFormat=N2}"/>

                    <DataGridTextColumn Header="{DynamicResource IDF_RentShare}" CanUserSort="True"
                                        IsReadOnly="True"
                                        Binding="{Binding RentShare, StringFormat=C2, ConverterCulture=de-DE}"/>

                    <DataGridTextColumn Header="{DynamicResource IDF_AdvanceTotal}" CanUserSort="True"
                                        IsReadOnly="True"
                                        Binding="{Binding ExtraCostsShare, StringFormat=C2, ConverterCulture=de-DE}"/>

                    <DataGridTextColumn Header="{DynamicResource IDF_PriceTotal}" CanUserSort="True"
                                        IsReadOnly="True"
                                        Binding="{Binding TotalCosts, StringFormat=C2, ConverterCulture=de-DE}"/>

                    <DataGridTextColumn Header="{DynamicResource IDF_Percentage}" CanUserSort="True" MinWidth="75"
                                        IsReadOnly="True" TextBlock.TextAlignment="Right"
                                        Binding="{Binding CostsPercentage, StringFormat=N2}"/>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
    </Grid>
</UserControl>
