<UserControl x:Class="SharedLivingCostCalculator.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:SharedLivingCostCalculator.Views" 
        xmlns:comps="clr-namespace:SharedLivingCostCalculator.Components" 
        xmlns:vms="clr-namespace:SharedLivingCostCalculator.ViewModels" 
        xmlns:enum="clr-namespace:SharedLivingCostCalculator.Enums" 
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:toolkit="http://propertytools.org/wpf"
        mc:Ignorable="d"
        Background="Transparent">
    <UserControl.Resources>

        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0 5"/>
        </Style>

        <Style TargetType="Border">
            <!--<Setter Property="BorderThickness" Value="2 2 2 2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SCB_Text_Header}"/>-->
            <Setter Property="Margin" Value="0 0 0 5"/>
        </Style>

    </UserControl.Resources>

    <StackPanel Margin="10 10" Orientation="Vertical">

        <!-- SelectedLanguageItem (texts) combobox -->
        <Border>
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{DynamicResource IDF_Language}"
                           MinWidth="200"
                           Style="{StaticResource StringValueTextBlock}"
                           VerticalAlignment="Center"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Select language. Changes will take effect immediately."
                                   ToolTip="Select language. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <ComboBox ItemsSource="{Binding Languages}"
                          SelectedItem="{Binding SelectedLanguage}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          MinWidth="100"
                          Grid.Column="2"/>
            </Grid>
        </Border>

        <TextBlock Text="Corner Rounding"
                   Margin="0 10 0 0"
                   Style="{StaticResource Header}"
                   FontSize="{DynamicResource FS}"/>

        <!-- ButtonCornerRadius slider -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           VerticalAlignment="Center"
                           Grid.Column="0"
                           Text="{DynamicResource IDF_ButtonCornerRadius}"/>

                <comps:PopupButton PopupText="Use slider to change button corner rounding. Value right to the slider indicates current corner radius. Changes will take effect immediately."
                                   ToolTip="Use slider to change button corner rounding. Value right to the slider indicates current corner radius. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <Slider Interval="1"
                    Grid.Column="2"
                    Value="{Binding ButtonCornerRadius}"
                    LargeChange="5"
                    SmallChange="1"
                    IsSnapToTickEnabled="True"
                    Minimum="0"
                    Maximum="55"
                    MinWidth="100">
                </Slider>

                <TextBlock Style="{StaticResource DoubleValueTextBlock}"
                           VerticalAlignment="Center"
                           MinWidth="50"
                           Grid.Column="3"
                           Text="{Binding ButtonCornerRadius}"/>

            </Grid>
        </Border>

        <!-- VisibilityFieldCornerRadius slider -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           VerticalAlignment="Center"
                           Grid.Column="0"
                           Text="{DynamicResource IDF_VisibilityFieldCornerRadius}"/>

                <comps:PopupButton PopupText="Use slider to change field corner rounding. Value right to the slider indicates current button corner radius. Changes will take effect immediately."
                                   ToolTip="Use slider to change field corner rounding. Value right to the slider indicates current button corner radius. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <Slider Interval="1"
                        Grid.Column="2"
                        Value="{Binding VisibilityFieldCornerRadius}"
                        LargeChange="5"
                        SmallChange="1"
                        IsSnapToTickEnabled="True"
                        Minimum="0"
                        Maximum="55"
                        MinWidth="100">
                </Slider>

                <TextBlock Style="{StaticResource DoubleValueTextBlock}"
                           VerticalAlignment="Center"
                           MinWidth="50"
                           Grid.Column="3" Text="{Binding VisibilityFieldCornerRadius}"/>
            </Grid>
        </Border>



        <TextBlock Text="Font Settings"
                   Margin="0 10 0 0"
                   Style="{StaticResource Header}"
                   FontSize="{DynamicResource FS}"/>

        <!-- FontFamily combobox -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_FontFamily}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           Grid.Column="0"
                       VerticalAlignment="Center"/>

                <comps:PopupButton PopupText="Choose a font family from your system fonts. Changes will take effect immediately."
                                   ToolTip="Choose a font family from your system fonts. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <ComboBox ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}"
                          SelectedItem="{Binding FontFamily}"
                          MinWidth="100" 
                          Grid.Column="2"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding Source}"
                                       FontFamily="{Binding Source}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource StringValueTextBlock}"
                                       />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </Border>

        <!-- FontSize slider -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                       VerticalAlignment="Center"
                           Grid.Column="0">
                    <Run Text="{DynamicResource IDF_FontSize}"/>
                    <Run Text="{Binding FontSize}" FontSize="{Binding FontSize}" />
                </TextBlock>

                <comps:PopupButton PopupText="Use the slider to change Font Size. Value to the left indicates selected font size. Confirm by clicking * button right to the slider, after that changes will take effect."
                                   ToolTip="Use the slider to change Font Size. Value to the left indicates selected font size. Confirm by clicking * button right to the slider, after that changes will take effect."
                                   Grid.Column="1"/>

                <Slider Interval="1"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Value="{Binding FontSize,
                UpdateSourceTrigger=PropertyChanged,
                Mode=TwoWay}"
                    LargeChange="4"
                    SmallChange="1"
                    IsSnapToTickEnabled="True"
                    Minimum="8"
                    Maximum="25"   
                    MinWidth="100">
                </Slider>

                <Button Content="*"
                        Command="{Binding ApplyFontSizeCommand}"
                        Style="{DynamicResource buttonStyle}"
                        Grid.Column="3"/>
            </Grid>
        </Border>


        <TextBlock Text="Color Settings"
                   Margin="0 10 0 0"
                   Style="{StaticResource Header}"
                   FontSize="{DynamicResource FS}"/>

        <!-- ForegroundColor picker -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_Foreground}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                       VerticalAlignment="Center"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Use color picker to change the standard text color. Changes will take effect immediately."
                                   ToolTip="Use color picker to change the standard text color. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <toolkit:ColorPicker HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                     SelectedColor="{Binding ForegroundColor}"
                                     MinWidth="100"
                            FontFamily="{DynamicResource FF}"
                            FontSize="{DynamicResource FS}"
                            Foreground="{DynamicResource SCB_Text}"
                            Background="{DynamicResource SCB_Background}"
                           Grid.Column="2"/>
            </Grid>
        </Border>

        <!-- BackgroundColor picker  -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_Background}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Use color picker to change the background color. Changes will take effect immediately."
                                   ToolTip="Use color picker to change the background color. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <toolkit:ColorPicker HorizontalAlignment="Stretch"
                             SelectedColor="{Binding BackgroundColor}"
                           MinWidth="100"
                            FontFamily="{DynamicResource FF}"
                            FontSize="{DynamicResource FS}"
                            Foreground="{DynamicResource SCB_Text}"
                            Background="{DynamicResource SCB_Background}"
                           Grid.Column="2"/>
            </Grid>
        </Border>

        <!-- ButtonBackgroundColor picker  -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_ButtonBackground}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Use color picker to change the background color of buttons and clickable areas. Changes will take effect immediately."
                                   ToolTip="Use color picker to change the background color of buttons and clickable areas. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <toolkit:ColorPicker HorizontalAlignment="Stretch"
                             SelectedColor="{Binding ButtonBackgroundColor}"
                           MinWidth="100"
                            FontFamily="{DynamicResource FF}"
                            FontSize="{DynamicResource FS}"
                            Foreground="{DynamicResource SCB_Text}"
                            Background="{DynamicResource SCB_Background}"
                           Grid.Column="2"/>
            </Grid>
        </Border>

        <!-- HeaderTextColor picker  -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_HeaderTextColor}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Use color picker to change the text color of headers and checkable buttons, as well as background color of popup hints. Changes will take effect immediately."
                                   ToolTip="Use color picker to change the text color of headers and checkable buttons, as well as background color of popup hints. Changes will take effect immediately."
                                   Grid.Column="1"/>
                
                <toolkit:ColorPicker HorizontalAlignment="Stretch"
                             SelectedColor="{Binding HeaderTextColor}"
                           MinWidth="100"
                            FontFamily="{DynamicResource FF}"
                            FontSize="{DynamicResource FS}"
                            Foreground="{DynamicResource SCB_Text}"
                            Background="{DynamicResource SCB_Background}"
                           Grid.Column="2"/>
            </Grid>
        </Border>

        <!-- SelectionColor picker  -->
        <Border>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{DynamicResource IDF_SelectionColor}"
                           Style="{StaticResource StringValueTextBlock}"
                           MinWidth="200"
                           Grid.Column="0"/>

                <comps:PopupButton PopupText="Use color picker to change the color of list selection background. Changes will take effect immediately."
                                   ToolTip="Use color picker to change the color of list selection background. Changes will take effect immediately."
                                   Grid.Column="1"/>

                <toolkit:ColorPicker HorizontalAlignment="Stretch"
                             SelectedColor="{Binding SelectionColor}"
                           MinWidth="100"
                            FontFamily="{DynamicResource FF}"
                            FontSize="{DynamicResource FS}"
                            Foreground="{DynamicResource SCB_Text}"
                            Background="{DynamicResource SCB_Background}"
                           Grid.Column="2"/>
            </Grid>
        </Border>


    </StackPanel>
</UserControl>
