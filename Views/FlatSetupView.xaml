<UserControl x:Class="SharedLivingCostCalculator.Views.FlatSetupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SharedLivingCostCalculator.Views"
             xmlns:viewmodels="clr-namespace:SharedLivingCostCalculator.ViewModels"
             xmlns:c_views="clr-namespace:SharedLivingCostCalculator.Components"        
             mc:Ignorable="d" 
             Background="Transparent">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="ProceedCommandVisibility" />
    </UserControl.Resources>

    <StackPanel Margin="10 20">
        <TextBlock Text="{DynamicResource IDF_FlatData}"
                   Style="{DynamicResource Header}"/>
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="410"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <UniformGrid Columns="2" Grid.Row="0"
                         Margin="0 2">
                <ToggleButton Content="Use Rooms"
                              Command="{Binding UseRoomsCommand}"
                              IsChecked="{Binding UseRoomsChecked}"
                              Style="{StaticResource toggleButtonStyle}"
                              ToolTip="{DynamicResource LRS_PH_UseRooms}"/>

                <ToggleButton Content="Use Workspaces"
                              Command="{Binding UseWorkspacesCommand}"
                              IsChecked="{Binding UseWorkspacesChecked}"
                              Style="{StaticResource toggleButtonStyle}"
                              IsEnabled="false"
                              ToolTip="{DynamicResource LRS_PH_UseWorkplaces}"/>
                              
            </UniformGrid>


            <c_views:ObjectInputView Label="{DynamicResource IDF_Address}"
                                 LabelMinWidth="125"
                               Value="{Binding FlatViewModel.Address,
            UpdateSourceTrigger=PropertyChanged,
            NotifyOnSourceUpdated=True,
            Mode=TwoWay}"
                               IsEnabled="{Binding FlatViewModel.HasDataLock}"
                                     PopupHint="{DynamicResource LRS_PH_Address}"
                               Foreground="DarkSlateGray"
                               ValueMinWidth="100"
                               Grid.Row="1" />

            <c_views:ObjectInputView Label="{DynamicResource IDF_Details}"
                                 LabelMinWidth="125"
                               Value="{Binding FlatViewModel.Details,
            UpdateSourceTrigger=PropertyChanged,
            NotifyOnSourceUpdated=True,
            Mode=TwoWay}"
                                     PopupHint="{DynamicResource LRS_PH_Details}"
                               IsEnabled="{Binding FlatViewModel.HasDataLock}"
                               Foreground="DarkSlateGray"
                               ValueMinWidth="100"
                               Grid.Row="2" />

            <c_views:DoubleInputView Label="{DynamicResource IDF_FlatArea}"
                                 LabelMinWidth="125"
                               Value="{Binding FlatViewModel.Area,
            NotifyOnSourceUpdated=True,
            UpdateSourceTrigger=PropertyChanged,
            NotifyOnTargetUpdated=True,
            Mode=TwoWay,
                              Delay=250}"                
                                     PopupHint="{DynamicResource LRS_PH_FlatArea}"            
                               IsEnabled="{Binding FlatViewModel.HasDataLock}"
                               Foreground="DarkSlateGray"
                                 ValueAlignment="Right"
                               ValueMinWidth="100"
                               Grid.Row="3" />

            <c_views:ObjectInputView Label="{DynamicResource IDF_Rooms}"
                                 LabelMinWidth="125"
                                 Value="{Binding FlatViewModel.RoomCount,
            NotifyOnSourceUpdated=True,
            UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     PopupHint="{DynamicResource LRS_PH_RoomCount}"
                                 IsEnabled="{Binding FlatViewModel.HasDataLock}"
                                 ValueAlignment="Right"
                                 Foreground="DarkSlateGray"
                                 ValueMinWidth="100"
                                 Grid.Row="4" />

            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <c_views:PopupButton PopupText="{DynamicResource LRS_PH_FlatNotes}"
                                     Grid.Column="0"/>

                <TextBox Grid.Column="1"
                     Text="{Binding FlatViewModel.FlatNotes,
                UpdateSourceTrigger=LostFocus,
                Mode=TwoWay}"
                     Style="{DynamicResource StringValueTextBox}"
                     IsEnabled="{Binding FlatViewModel.HasDataLock}"
                     
                     VerticalScrollBarVisibility="Auto"
                     MaxHeight="200"
                     MaxWidth="410"
                     AcceptsReturn="True"
                     TextWrapping="Wrap"
                     VerticalAlignment="Stretch"
                     HorizontalContentAlignment="Left"
                     VerticalContentAlignment="Top"
                     Margin="2"/>
            </Grid>

        </Grid>
    </StackPanel>

</UserControl>
